digraph "mve::View"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="mve::View",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" images" ,fontname="FreeSans"];
  Node1 [label="std::vector\< ImageProxy \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="FreeSans"];
  Node2 [label="mve::View::ImageProxy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmve_1_1_view_1_1_image_proxy.html",tooltip="Proxy for images. "];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" name\nfilename" ,fontname="FreeSans"];
  Node3 [label="std::string",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="std::basic_string\<\l char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node5 -> Node0 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" meta_data" ,fontname="FreeSans"];
  Node5 [label="mve::View::MetaData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmve_1_1_view_1_1_meta_data.html",tooltip="View meta information that stores key/value pairs and the camera. "];
  Node6 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" camera" ,fontname="FreeSans"];
  Node6 [label="mve::CameraInfo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmve_1_1_camera_info.html",tooltip="Per-view camera information with various helper functions. "];
  Node7 -> Node5 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" data" ,fontname="FreeSans"];
  Node7 [label="std::map\< std::string,\l std::string \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" keys\nelements" ,fontname="FreeSans"];
  Node3 -> Node0 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" path" ,fontname="FreeSans"];
  Node8 -> Node0 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" blobs" ,fontname="FreeSans"];
  Node8 [label="std::vector\< BlobProxy \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node9 -> Node8 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="FreeSans"];
  Node9 [label="mve::View::BlobProxy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmve_1_1_view_1_1_blob_proxy.html",tooltip="Proxy for BLOBs (Binary Large OBjects). "];
  Node3 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" name\nfilename" ,fontname="FreeSans"];
  Node10 -> Node0 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" to_delete" ,fontname="FreeSans"];
  Node10 [label="std::vector\< std::string \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node10 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="FreeSans"];
}
