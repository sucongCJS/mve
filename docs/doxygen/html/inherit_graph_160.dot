digraph "Graphical Class Hierarchy"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node31 [label="std::basic_string\<\l Char \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node31 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node32 [label="std::string",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node32 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node0 [label="util::Exception",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classutil_1_1_exception.html",tooltip="Universal, simple exception class. "];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 [label="util::FileException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classutil_1_1_file_exception.html",tooltip="Exception class for file exceptions with additional filename. "];
  Node28 [label="std::exception",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node28 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
}
