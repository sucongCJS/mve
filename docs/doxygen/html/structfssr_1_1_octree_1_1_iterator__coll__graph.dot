digraph "fssr::Octree::Iterator"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node0 [label="fssr::Octree::Iterator",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" root\ncurrent" ,fontname="FreeSans"];
  Node1 [label="fssr::Octree::Node",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structfssr_1_1_octree_1_1_node.html",tooltip="Simple recursive octree node that stores samples in a vector. "];
  Node1 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" parent\nchildren" ,fontname="FreeSans"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" samples" ,fontname="FreeSans"];
  Node2 [label="std::vector\< fssr::\lSample \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" elements" ,fontname="FreeSans"];
  Node3 [label="fssr::Sample",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structfssr_1_1_sample.html",tooltip="Representation of a point sample. "];
}
